// This program attempts to recreate the following function:
// Opr(Opr(Opr(X, C0), Opr(C2, Opr(Y, C0))), Opr(C2, X))
//
// Calculated in the following order:
// 1. Opr(Y, C0)
// 2. Opr(C2, Opr(Y, C0))
// 3. Opr(C2, X)
// 4. Opr(X, C0)
// 5. Opr(Opr(X, C0), Opr(C2, Opr(Y, C0)))
// 6. Opr(Opr(Opr(X, C0), Opr(C2, Opr(Y, C0))), Opr(C2, X))
// 
// Where X = 1 and Y = user input.
//
// At the time of writing this, I was under the assumption 
// that the above function adds two ternary numbers, X and Y. 
// I was wrong. It *almost* adds two ternary numbers. 
// The function only works when X and Y contain no 2s.
//
// My initial plan was to create a program that adds 1 to 
// a user-inputted ASCII character. However, because of
// the problem I explained above, this program only works for
// the following (printable) ASCII characters: 
//
// $, %, ', (, Q, R, T, U, Z, [, ], ^, l, m, o, p, u, v, x, y 
//
// Although the function doesn't work how I originally thought, 
// at least I can say that I successfully implemented it into
// Malbolge.
//
// Author: Anna Carvalho
// date: 4/16/2022

.CODE
//Standard malbolge commands
MOVD:
    MovD/Nop
    Jmp

CRAZY:
    Opr/Nop
    Jmp

ROT:
    Rot/Nop
    Jmp

HALT:
    Hlt

OUT:
    Out/Nop
    Jmp

IN:
    In/Nop
    Jmp

// the following routines act as 'counters'.
COUNT:
    Nop/MovD
    Jmp

COUNT2:
    Nop/Nop/MovD/Nop
    Jmp

.DATA
// C0 = Opr(Y, C0) on first run
// C0 = Opr(C2, Opr(Y, C0)) on second run
// C0 = Opr(Opr(1, C0), Opr(C2, Opr(Y, C0))) on third run
C2_Y_C0:
    CRAZY C0 R_CRAZY
    COUNT2 C2_ONE		// hit on third run
    COUNT C2_ONE		// hit on second run
    ROT C2
    R_MOVD MOVD C2_Y_C0	// hit on first run

// calc Opr(1, C0) and put in C0
ONE_C0:
    R_ROT ROT 3		// put 1 into A
    CRAZY C0 R_CRAZY	
    R_MOVD MOVD C2_Y_C0

// calculate Opr(C2, 1) and put into 1 on first run only.
// calculate Opr(Opr(Opr(1, C0), Opr(C2, Opr(Y, C0))), Opr(C2, 1)) on second run.
// output result followed by \n on third run.
C2_ONE:
    COUNT2 ROT2		// hit on first run
    CRAZY 1 R_CRAZY	
    COUNT ONE_C0		// hit on second run
    OUT ?- R_OUT		// this last section is hit on third run
    R_ROT ROT 30		// print newline
    OUT ?-
    HALT ?-

// the purpose of this function is to put C2 into A when we want
// to calculate Opr(C2, 1) in C2_ONE. The program will not reach this
// function in the second run of C2_ONE and thus the result of 
// Opr(Opr(1, C0), Opr(C2, Opr(Y, C0))) will remain in A.
ROT2:
    R_ROT ROT C2		// put 2222222222 into A
    R_COUNT2 R_COUNT2	// restore COUNT2
    R_COUNT			// restore COUNT
    R_MOVD MOVD C2_ONE

GET_INPUT:
    IN ?-			// A = input
    R_MOVD MOVD C2_Y_C0	// start by calculating Opr(C2, Opr(1, C0))
    
ENTRY:
    MOVD GET_INPUT

